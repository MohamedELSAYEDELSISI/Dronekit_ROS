// Generated by gencpp from file ross/confg_mode.msg
// DO NOT EDIT!


#ifndef ROSS_MESSAGE_CONFG_MODE_H
#define ROSS_MESSAGE_CONFG_MODE_H

#include <ros/service_traits.h>


#include <ross/confg_modeRequest.h>
#include <ross/confg_modeResponse.h>


namespace ross
{

struct confg_mode
{

typedef confg_modeRequest Request;
typedef confg_modeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct confg_mode
} // namespace ross


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ross::confg_mode > {
  static const char* value()
  {
    return "bccd39359c727acbf8e5cbae37fe0188";
  }

  static const char* value(const ::ross::confg_mode&) { return value(); }
};

template<>
struct DataType< ::ross::confg_mode > {
  static const char* value()
  {
    return "ross/confg_mode";
  }

  static const char* value(const ::ross::confg_mode&) { return value(); }
};


// service_traits::MD5Sum< ::ross::confg_modeRequest> should match
// service_traits::MD5Sum< ::ross::confg_mode >
template<>
struct MD5Sum< ::ross::confg_modeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ross::confg_mode >::value();
  }
  static const char* value(const ::ross::confg_modeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ross::confg_modeRequest> should match
// service_traits::DataType< ::ross::confg_mode >
template<>
struct DataType< ::ross::confg_modeRequest>
{
  static const char* value()
  {
    return DataType< ::ross::confg_mode >::value();
  }
  static const char* value(const ::ross::confg_modeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ross::confg_modeResponse> should match
// service_traits::MD5Sum< ::ross::confg_mode >
template<>
struct MD5Sum< ::ross::confg_modeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ross::confg_mode >::value();
  }
  static const char* value(const ::ross::confg_modeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ross::confg_modeResponse> should match
// service_traits::DataType< ::ross::confg_mode >
template<>
struct DataType< ::ross::confg_modeResponse>
{
  static const char* value()
  {
    return DataType< ::ross::confg_mode >::value();
  }
  static const char* value(const ::ross::confg_modeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROSS_MESSAGE_CONFG_MODE_H
