// Generated by gencpp from file ross/takeoff.msg
// DO NOT EDIT!


#ifndef ROSS_MESSAGE_TAKEOFF_H
#define ROSS_MESSAGE_TAKEOFF_H

#include <ros/service_traits.h>


#include <ross/takeoffRequest.h>
#include <ross/takeoffResponse.h>


namespace ross
{

struct takeoff
{

typedef takeoffRequest Request;
typedef takeoffResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct takeoff
} // namespace ross


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ross::takeoff > {
  static const char* value()
  {
    return "ac516dd7f44daec312f7639f631f2f8d";
  }

  static const char* value(const ::ross::takeoff&) { return value(); }
};

template<>
struct DataType< ::ross::takeoff > {
  static const char* value()
  {
    return "ross/takeoff";
  }

  static const char* value(const ::ross::takeoff&) { return value(); }
};


// service_traits::MD5Sum< ::ross::takeoffRequest> should match
// service_traits::MD5Sum< ::ross::takeoff >
template<>
struct MD5Sum< ::ross::takeoffRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ross::takeoff >::value();
  }
  static const char* value(const ::ross::takeoffRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ross::takeoffRequest> should match
// service_traits::DataType< ::ross::takeoff >
template<>
struct DataType< ::ross::takeoffRequest>
{
  static const char* value()
  {
    return DataType< ::ross::takeoff >::value();
  }
  static const char* value(const ::ross::takeoffRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ross::takeoffResponse> should match
// service_traits::MD5Sum< ::ross::takeoff >
template<>
struct MD5Sum< ::ross::takeoffResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ross::takeoff >::value();
  }
  static const char* value(const ::ross::takeoffResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ross::takeoffResponse> should match
// service_traits::DataType< ::ross::takeoff >
template<>
struct DataType< ::ross::takeoffResponse>
{
  static const char* value()
  {
    return DataType< ::ross::takeoff >::value();
  }
  static const char* value(const ::ross::takeoffResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROSS_MESSAGE_TAKEOFF_H
